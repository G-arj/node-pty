# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-18.04'
  strategy:
    matrix:
      node_12_x:
        node_version: 12.x
      node_14_x:
        node_version: 14.x
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(node_version)
    displayName: 'Install Node.js'
  - script: |
      npm i
    displayName: 'Install dependencies and build'
  - script: |
      npm test
    displayName: 'Test'
  - script: |
      npm run lint
    displayName: 'Lint'

- job: macOS
  pool:
    vmImage: 'macOS-latest'
  strategy:
    matrix:
      node_12_x:
        node_version: 12.x
      node_14_x:
        node_version: 14.x
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(node_version)
    displayName: 'Install Node.js'
  - script: |
      npm i
    displayName: 'Install dependencies and build'
  - script: |
      npm test
    displayName: 'Test'
  - script: |
      npm run lint
    displayName: 'Lint'

- job: Windows
  pool:
    vmImage: 'windows-latest'
  strategy:
    matrix:
      node_12_x:
        node_version: 12.x
      node_14_x:
        node_version: 14.x
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(node_version)
    displayName: 'Install Node.js'
  - powershell: |
      # update node-gyp to latest for support in detecting VS 2022 toolchain
      npm install -g node-gyp@latest
      # Resolve to node-gyp.js
      # Remove this once node-version > 17.4.x or > 16.14.0,
      # which ships with npm > 8.4.0 that has support for VS 2022 toolchain.
      $env:npm_config_node_gyp=$(Join-Path $(Get-Command node-gyp.cmd).Path "..\node_modules\node-gyp\bin\node-gyp.js" -Resolve)
      npm i
    displayName: 'Install dependencies and build'
  - script: |
      npm test
    displayName: 'Test'
  - script: |
      npm run lint
    displayName: 'Lint'

- job: Release
  dependsOn:
  - Linux
  - macOS
  - Windows
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '12.x'
    displayName: 'Install Node.js'
  - script: |
      npm i
    displayName: 'Install dependencies and build'
  - script: |
      NPM_AUTH_TOKEN="$(NPM_AUTH_TOKEN)" node ./scripts/publish.js
    displayName: 'Publish to npm'

